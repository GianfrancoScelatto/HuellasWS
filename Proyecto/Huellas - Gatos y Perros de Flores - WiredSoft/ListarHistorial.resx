<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExportar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>